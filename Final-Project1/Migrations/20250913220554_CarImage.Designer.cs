// <auto-generated />
using System;
using Final_Project1.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Final_Project1.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250913220554_CarImage")]
    partial class CarImage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Final_Project1.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("RoleName")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FullName = "Oğuz Selvin",
                            Password = "$2a$12$XAKl1Ys7MykMQJT4nma5busReIZMTgBvpuwnJtD0LOOqlZok7gaia",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Final_Project1.Entities.CarBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("PictureUrl")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("Final_Project1.Entities.CarDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarBrandId")
                        .HasColumnType("int");

                    b.Property<string>("CarColor")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("CarKilometer")
                        .HasColumnType("int");

                    b.Property<int>("CarYear")
                        .HasColumnType("int");

                    b.Property<decimal>("DailyPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("DisplayIndex")
                        .HasColumnType("int");

                    b.Property<int>("RezervationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarBrandId");

                    b.HasIndex("RezervationId");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("Final_Project1.Entities.CarImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarDetailId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarDetailId");

                    b.ToTable("CarImages");
                });

            modelBuilder.Entity("Final_Project1.Entities.Rezervation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Mailaddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.HasKey("Id");

                    b.ToTable("Rezurations");
                });

            modelBuilder.Entity("Final_Project1.Entities.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("DisplayIndex")
                        .HasColumnType("int");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("Final_Project1.Entities.CarBrand", b =>
                {
                    b.HasOne("Final_Project1.Entities.CarBrand", "ParentBrand")
                        .WithMany("ChildBrand")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentBrand");
                });

            modelBuilder.Entity("Final_Project1.Entities.CarDetail", b =>
                {
                    b.HasOne("Final_Project1.Entities.CarBrand", "CarBrand")
                        .WithMany("CarDetails")
                        .HasForeignKey("CarBrandId");

                    b.HasOne("Final_Project1.Entities.Rezervation", "Rezervation")
                        .WithMany("CarDetails")
                        .HasForeignKey("RezervationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarBrand");

                    b.Navigation("Rezervation");
                });

            modelBuilder.Entity("Final_Project1.Entities.CarImage", b =>
                {
                    b.HasOne("Final_Project1.Entities.CarDetail", "CarDetail")
                        .WithMany("Images")
                        .HasForeignKey("CarDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarDetail");
                });

            modelBuilder.Entity("Final_Project1.Entities.CarBrand", b =>
                {
                    b.Navigation("CarDetails");

                    b.Navigation("ChildBrand");
                });

            modelBuilder.Entity("Final_Project1.Entities.CarDetail", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("Final_Project1.Entities.Rezervation", b =>
                {
                    b.Navigation("CarDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
